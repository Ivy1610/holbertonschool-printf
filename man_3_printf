./" _printf man page
.TH _printf 3 "march 28 2024" "0.1" "User commands"

.SH NAME
.B _printf
Is a standard libary function used to display formatted data on the standard outout

.SH SYNOPSIS
.B #include "main.h"
.sp
.B int _printf(const char *format, ...);

.SH DESCRIPTION
The printf function sends formatted output to stdout. Printf function format string is a character string, beginnig and ending in it's initial shift state, if any. These arguments are placed used % operator

.SS Compilation
gcc -Wall -Wextra -Werror -pedantic -std=gnu89 -Wno-format *.c

.SH The conversion specifier:

.IT
.B d,i
.RS int argument is converted to signed decimal integer.

.IT
.B s
.RS stirng argument. _printf handles s conversion specifier if the argument value is not a pointer to a literal string.

.IT
.B c
.RS integer or char argument converted to unsigned char.

.IT
.B %
.RS % symbol is set without argument and conversion specification has to be'%%'.

.IT
.B p
.RS the pointer is printed in hexidecimal format preceded by '0x'.

.SH RETURN VALUE
Return value is a n number of characters except NULL

.SH EXAMPLES

.B Printing a string:

#include <main.h>

int print_string(const char *str)
{
	int count = 0;

	while (*str != 0)
	{
		putchar(*str);
		str++;
		count++;
	}
	return (count);
}

.B Printing an integer:

#include <main.h>

int print_integer(int num)
{
	int count = 0;

	printf("%d", num);
	while (num != 0)
	{
		num /= 10;
		count++;
	}
	return (count);
}

.B Printing a octal:

#include <main.h>

int print_octal(unsigned int num)
{
	int count = 0;

	printf("%o", num);
	while (num != 0)
	{
		num /= 8;
		count++;
	}
	return (count);
}

.B Printing a character

#include <main.h>

int print_char(char ch)
{
	putchar(ch);
	return (1);
}

.B Printing in hexadecimal format:

#include <main.h>

int print_hexadecimal(unsigned int num)
{
	int count = 0;

	printf("%x", num);
	while (num != 0)
	{
		num /= 16;
		count++;
	}
	return (count);
}

.SH AUTHORS
Aline LAURIER
Yveline MENDES
Fatma GMATI
